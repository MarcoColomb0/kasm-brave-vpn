name: Builder

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 5 */3 * *"

env:
  IMAGE_NAME: kasm-brave-vpn

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Determine commit message
        id: commit_message
        run: |
          COMMIT_MESSAGE=$(git log --format=%B -n 1)
          echo "::set-output name=commit_message::$COMMIT_MESSAGE"
      - name: Determine image tag
        id: determine_tag
        run: |
          COMMIT_MESSAGE="${{ steps.commit_message.outputs.commit_message }}"
          if echo "$COMMIT_MESSAGE" | grep -q -E '[0-9]+\.[0-9]+'; then
            echo "Setting image tag to commit hash"
            TAG=$(echo "${{ github.sha }}" | cut -c1-8)
          else
            echo "Setting image tag to 'latest'"
            TAG=latest
          fi
          echo "::set-output name=tag::$TAG"
      - name: Build image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ steps.determine_tag.outputs.tag }} -f brave-vpn .
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [ "$VERSION" == "main" ] && VERSION=latest
          docker tag ${{ env.IMAGE_NAME }} $IMAGE_ID:${{ steps.determine_tag.outputs.tag }}
          docker push $IMAGE_ID:${{ steps.determine_tag.outputs.tag }}